def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def flutterRoot = localProperties.getProperty('flutter.sdk')
if (flutterRoot == null) {
    throw new GradleException("Flutter SDK not found. Define location with flutter.sdk in the local.properties file.")
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = '1'
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    flutterVersionName = '1.0'
}

apply plugin: 'com.android.application'
apply from: "$flutterRoot/packages/flutter_tools/gradle/flutter.gradle"

android {
    compileSdkVersion 29
    buildToolsVersion '29.0.2'

    lintOptions {
        disable 'InvalidPackage'
    }

    defaultConfig {
        // TODO: Specify your own unique Application ID (https://developer.android.com/studio/build/application-id.html).
        applicationId "com.southdgj.travelapp"
        minSdkVersion 21
        targetSdkVersion 29
        versionCode flutterVersionCode.toInteger()
        versionName flutterVersionName
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    signingConfigs {
        release {
            storeFile file('travelkey')
            storePassword 'sobey123'
            keyAlias 'travel'
            keyPassword 'sobey123'
        }
    }
    buildTypes {
        release {
            minifyEnabled false
            signingConfig signingConfigs.release
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
//            ndk {
//                //选择要添加的对应 cpu 类型的 .so 库。
////                abiFilters "armeabi-v7a"
////                abiFilters "armeabi-v7a"
//                // 还可以添加
//            }
            ndk {
                abiFilters "arm64-v8a", "armeabi-v7a"
            }



        }
        debug {
            ndk {
                abiFilters "arm64-v8a", "armeabi-v7a"
            }
//            ndk {
//                //选择要添加的对应 cpu 类型的 .so 库。
////                abiFilters "armeabi-v7a"
////                abiFilters "armeabi-v7a"
//                // 还可以添加
//            }
            minifyEnabled false
            signingConfig signingConfigs.release
        }
    }

    packagingOptions {
        exclude 'lib/arm64-v8a/libgojni.so'
        exclude 'lib/x86/libgojni.so'
        exclude 'lib/x86_64/libgojni.so'
    }
    dexOptions {
        javaMaxHeapSize "4g"
    }
}

flutter {
    source '../..'
}

dependencies {
    testImplementation 'junit:junit:4.12'
    implementation 'androidx.multidex:multidex:2.0.1'
    androidTestImplementation 'androidx.test:runner:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.1.1'
    //定位功能
    implementation 'com.amap.api:location:5.2.0'
}
